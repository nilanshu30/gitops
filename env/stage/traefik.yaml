
services:
  traefik:
    image: traefik:v3.3
    ports:
      - 80:80
      - 443:443
    # networks:
    #   - public
    deploy:
      # labels:
      #   - "traefik.enable=true"
      #   - "traefik.http.middlewares.test-compress.compress=true"
      #   - "traefik.http.routers.dashboard.rule=Host(`console.localhost`)"
      #   - "traefik.http.routers.dashboard.service=api@internal"
      #   - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      #   - "traefik.http.routers.ping.rule=Path(`/ping`)"
      #   - "traefik.http.routers.ping.service=ping@internal"
      #   - "traefik.http.services.ping.loadbalancer.server.port=8080"

      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    # configs:
    #   - source: static
    #     target: /etc/traefik/traefik.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  whoami:
    image: traefik/whoami:v1.10
    # networks:
    #   - public
    deploy:
      mode: replicated
      replicas: 1
      # labels:
      #   - "traefik.enable=true"
      #   - "traefik.http.services.whoami.loadbalancer.server.port=80"
      #   - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"

# configs:
#   static:
#     file: ./traefik/static.yml
#     name: static

# networks:
#   public:
#     external: true
